apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.zx.landdisaster"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 18
        versionName "1.0.17"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "4957bf71ab5cef0c32579861",
                JPUSH_CHANNEL: "developer-default",
        ]
        signingConfigs {
            sign {
                keyAlias 'zxdlxx'
                keyPassword '123456'
                storeFile file('../zxdl.jks')
                storePassword '123456'
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
        ndk {
           // abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
            abiFilters "armeabi-v7a"
        }
    }
    dexOptions { //优化dex配置
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "4g"
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newApkName
            if (variant.buildType.debuggable) {
                newApkName = "安全调度_" + getDebugTime() + "_Debug_" + defaultConfig.versionName + ".apk"
            } else {
                newApkName = "安全调度_" + getTime() + "_" + defaultConfig.versionName + ".apk"
            }
            outputFileName = newApkName
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }
    compileOptions {
        incremental = true  //开启增量编译
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            crunchPngs false //关闭crunchPng优化, 以加快构建
            minifyEnabled false
            buildConfigField "boolean", "RELEASE", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
//            applicationIdSuffix '.new'
            minifyEnabled false
            buildConfigField "boolean", "RELEASE", "true"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LGPL2.1'
    }

}

buildscript {
    repositories {
        jcenter()
    }
}

repositories {
    flatDir { dirs 'libs' }
}

def getTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}

def getDebugTime() {
    return new Date().format("yyMMddhhmm", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    implementation project(':zxmvp')
    implementation 'com.tencent.bugly:crashreport:2.8.6'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.7.1'
    implementation 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'com.jzxiang.pickerview:TimePickerDialog:1.0.1'
    implementation 'com.github.StannyBing:ZXUtils:2.2.9'
    implementation 'cn.jiguang.sdk:jpush:3.2.0'
    implementation 'cn.jiguang.sdk:jcore:1.2.7'
    implementation 'com.esri.arcgis.android:arcgis-android:10.2.9'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs/BASE64Encoder.jar')
    implementation 'com.github.barteksc:android-pdf-viewer:3.1.0-beta.1'
    implementation files('libs/BaiduLBS_Android.jar')
}
